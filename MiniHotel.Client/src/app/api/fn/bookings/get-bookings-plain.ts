/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { BookingDtoPagedResult } from '../../models/booking-dto-paged-result';
import { BookingStatus } from '../../models/booking-status';

export interface GetBookings$Plain$Params {

/**
 * The page number to retrieve (default is 1).
 */
  pageNumber?: number;

/**
 * The number of records per page (default is 10).
 */
  pageSize?: number;

/**
 * Optional search term to filter bookings by customer name, room number, or room type.
 */
  search?: string;

/**
 * Booking status for filtering (optional).
 */
  status?: BookingStatus;
}

export function getBookings$Plain(http: HttpClient, rootUrl: string, params?: GetBookings$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<BookingDtoPagedResult>> {
  const rb = new RequestBuilder(rootUrl, getBookings$Plain.PATH, 'get');
  if (params) {
    rb.query('pageNumber', params.pageNumber, {});
    rb.query('pageSize', params.pageSize, {});
    rb.query('search', params.search, {});
    rb.query('status', params.status, {});
  }

  return http.request(
    rb.build({ responseType: 'text', accept: 'text/plain', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<BookingDtoPagedResult>;
    })
  );
}

getBookings$Plain.PATH = '/api/Bookings';
